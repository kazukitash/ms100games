// Generated by CoffeeScript 1.6.3
(function() {
  var Flying, GameOverScene, GameScene, Hoge, Sign, TitleScene, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  Flying = (function(_super) {
    __extends(Flying, _super);

    function Flying() {
      Flying.__super__.constructor.call(this, 117, 125);
      this.image = core.assets["trash.png"];
      this.vx = 0;
      this.vy = 0;
      this.length = 0;
      this.isTouched = false;
      this.isTouched = false;
      this.moveCenterTo(HQ_GAME_WIDTH / 2, HQ_GAME_HEIGHT - 100);
    }

    Flying.prototype.moveCenterTo = function(x, y) {
      this.x = x - this.width / 2;
      return this.y = y - this.height / 2;
    };

    Flying.prototype.hasFlied = function() {
      return this.isTouched;
    };

    Flying.prototype.ontouchstart = function(e) {
      this.touchstartX = e.x;
      return this.touchstartY = e.y;
    };

    Flying.prototype.ontouchend = function(e) {
      var dx, dy;
      if (!this.hasFlied()) {
        this.isTouched = true;
        this.touchendX = e.x;
        this.touchendY = e.y;
        dx = this.touchendX - this.touchstartX;
        dy = this.touchendY - this.touchstartY;
        this.vx = dx / 10;
        return this.vy = dy / 10;
      }
    };

    Flying.prototype.onenterframe = function() {
      var dx, dy;
      dx = this.x + this.vx;
      dy = this.y + this.vy;
      if (this.isTouched) {
        this.vy += 1;
        if (this.vy < 0) {
          this.length -= this.vy;
        } else if (this.vy > 0) {
          this.length += this.vy;
        }
        this.scaleX = 1 - this.length * 0.0005;
        this.scaleY = 1 - this.length * 0.0005;
      }
      if (0 < dx && dx < HQ_GAME_WIDTH && dy < HQ_GAME_HEIGHT) {
        this.x += this.vx;
        return this.y += this.vy;
      } else if (!this.isTrashed) {
        return this.dispatchEvent(new Event("out"));
      }
    };

    return Flying;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  Hoge = (function(_super) {
    __extends(Hoge, _super);

    function Hoge() {
      Hoge.__super__.constructor.call(this, 150, 150);
      this.moveTo(550, 100);
    }

    return Hoge;

  })(Sprite);

  Sign = (function(_super) {
    __extends(Sign, _super);

    function Sign() {
      Sign.__super__.constructor.call(this, 125, 71);
      this.image = core.assets["left.png"];
      this.moveTo(1050, 100);
    }

    return Sign;

  })(Sprite);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      GameScene.__super__.constructor.call(this);
      this.length = 0;
      this.v = 0;
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.hoge = new Hoge();
      this.addChild(this.hoge);
      this.addTrash();
      this.isLabel = false;
      this.label = new Label(this.v.toString());
      this.label.font = "60px Serif";
      this.label.color = "black";
      this.label.x = 1050;
      this.label.y = 10;
      this.addChild(this.label);
      this.sign = new Sign();
      this.addChild(this.sign);
    }

    GameScene.prototype.addTrash = function() {
      var _this = this;
      this.flying = new Flying();
      this.flying;
      this.addChild(this.flying);
      return this.flying.addEventListener("out", function() {
        core.gameOverScene = new GameOverScene(_this.length);
        return core.replaceScene(core.gameOverScene);
      });
    };

    GameScene.prototype.onenterframe = function() {
      var _this = this;
      this.v = Math.sin(core.frame / 100) * 3;
      this.label.text = this.v.toFixed(2);
      if (0 < this.v) {
        this.sign.image = core.assets["right.png"];
      } else {
        this.sign.image = core.assets["left.png"];
      }
      if (this.flying.hasFlied()) {
        this.flying.x += this.v;
      }
      if (0 < this.flying.vy && this.flying.intersect(this.hoge)) {
        this.flying.opacity = 0;
        this.flying.isTrashed = true;
        if (!this.isLabel) {
          this.scoreLabel = new Label("シューーーート!!!");
          this.scoreLabel.width = 900;
          this.scoreLabel.textAlign = "center";
          this.scoreLabel.moveTo((HQ_GAME_WIDTH - this.scoreLabel.width) / 2, 300);
          this.scoreLabel.font = "100px Sans-serif";
          this.scoreLabel.color = "red";
          this.isLabel = true;
        }
        this.addChild(this.scoreLabel);
        return this.tl.delay(60).then(function() {
          _this.removeChild(_this.scoreLabel);
          delete _this.scoreLabel;
          _this.isLabel = false;
          _this.length++;
          _this.removeChild(_this.flying);
          delete _this.flying;
          return _this.addTrash();
        });
      }
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      this.label = new Label(score.toString());
      this.label.font = "60px Serif";
      this.label.color = "black";
      this.label.x = (HQ_GAME_WIDTH - this.label.width) / 2 + 150;
      this.label.y = (HQ_GAME_HEIGHT - this.label.height) / 2 + 30;
      this.addChild(this.label);
    }

    GameOverScene.prototype.ontouchstart = function() {
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over.png");
    assets.push("trash.png");
    assets.push("right.png");
    assets.push("left.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
