// Generated by CoffeeScript 1.6.3
(function() {
  var CountUpTimer, Foot, GameOverScene, GameScene, MySprite, Player, TitleScene, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  CountUpTimer = (function(_super) {
    __extends(CountUpTimer, _super);

    function CountUpTimer() {
      CountUpTimer.__super__.constructor.call(this, "0.00");
      this.startAt = Infinity;
    }

    CountUpTimer.prototype.start = function() {
      return this.startAt = core.frame;
    };

    CountUpTimer.prototype.currentFrame = function() {
      return core.frame - this.startAt;
    };

    CountUpTimer.prototype.currentSec = function() {
      return this.currentFrame() / core.fps;
    };

    CountUpTimer.prototype.onenterframe = function() {
      return this.text = this.currentSec().toFixed(2);
    };

    return CountUpTimer;

  })(Label);

  MySprite = (function(_super) {
    __extends(MySprite, _super);

    function MySprite() {
      MySprite.__super__.constructor.call(this, 300, 300);
    }

    return MySprite;

  })(Sprite);

  Player = (function(_super) {
    __extends(Player, _super);

    function Player() {
      Player.__super__.constructor.call(this, 95, 153);
      this.image = core.assets["hito.png"];
      this.baseY = 500;
      this.vx = 0;
      this.moveTo(1, this.baseY);
    }

    Player.prototype.goRight = function() {
      this.vx = 10;
      return this.scaleX = 1;
    };

    Player.prototype.goLeft = function() {
      this.vx = -10;
      return this.scaleX = -1;
    };

    Player.prototype.onenterframe = function() {
      if (0 < this.x + this.vx && this.x + this.width + this.vx < HQ_GAME_WIDTH) {
        this.x += this.vx;
      }
      return this.y = 10 * Math.sin(core.frame) + this.baseY;
    };

    return Player;

  })(Sprite);

  Foot = (function(_super) {
    __extends(Foot, _super);

    function Foot() {
      Foot.__super__.constructor.call(this, 302, 722);
      this.image = core.assets["foot.png"];
      this.y = -this.height;
    }

    Foot.prototype.eta = function() {
      return 30;
    };

    Foot.prototype.stomp = function(x) {
      this.x = x;
      return this.stompAt = core.frame;
    };

    Foot.prototype.isStomping = function() {
      return this.stompAt < core.frame;
    };

    Foot.prototype.onenterframe = function() {
      var end, frame, v;
      if (this.stompAt < core.frame) {
        frame = core.frame - this.stompAt;
        v = 20;
        end = this.height / v;
        if (frame < end) {
          return this.y += v;
        } else if (frame < end * 2) {
          return this.y -= v;
        } else {
          return this.stompAt = Infinity;
        }
      }
    };

    return Foot;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      GameScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.player = new Player();
      this.player.x = 200;
      this.player.goRight();
      this.addChild(this.player);
      this.foot = new Foot();
      this.addChild(this.foot);
      this.timer = new CountUpTimer();
      this.timer.start();
    }

    GameScene.prototype.ontouchstart = function(e) {
      if (e.x < this.player.x + this.player.width / 2) {
        return this.player.goLeft();
      } else {
        return this.player.goRight();
      }
    };

    GameScene.prototype.onenterframe = function() {
      var random;
      if (!this.foot.isStomping()) {
        random = (Math.random() * 2 - 1) * 200;
        this.foot.stomp(random + this.player.x);
      }
      if (this.foot.intersect(this.player)) {
        core.gameOverScene = new GameOverScene(this.timer.currentSec());
        return core.replaceScene(core.gameOverScene);
      }
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      this.label = new Label(score.toFixed(2));
      this.label.width = 600;
      this.label.textAlign = "center";
      this.label.moveTo((HQ_GAME_WIDTH - this.label.width) / 2 + 30, 370);
      this.label.font = "100px Sans-serif";
      this.label.color = "rgb(230,230,230)";
      this.addChild(this.label);
    }

    GameOverScene.prototype.ontouchstart = function() {
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over.png");
    assets.push("time.png");
    assets.push("foot.png");
    assets.push("hito.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
