// Generated by CoffeeScript 1.6.3
(function() {
  var Bar, CountDownTimer, GameOverScene, GameScene, Runner, TitleScene, Water, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  CountDownTimer = (function(_super) {
    __extends(CountDownTimer, _super);

    function CountDownTimer(sec) {
      CountDownTimer.__super__.constructor.call(this);
      this.frame = sec * core.fps;
      this.startAt = Infinity;
    }

    CountDownTimer.prototype.start = function() {
      return this.startAt = core.frame;
    };

    CountDownTimer.prototype.isStarted = function() {
      return this.startAt < core.frame;
    };

    CountDownTimer.prototype.remainingFrame = function() {
      return this.frame - core.frame + this.startAt;
    };

    CountDownTimer.prototype.remainingSec = function() {
      return this.remainingFrame() / core.fps;
    };

    CountDownTimer.prototype.onenterframe = function() {
      var e;
      this.text = this.remainingSec().toFixed(2);
      if (this.remainingFrame() === 0) {
        e = new Event("over");
        return this.dispatchEvent(e);
      }
    };

    return CountDownTimer;

  })(Label);

  Runner = (function(_super) {
    __extends(Runner, _super);

    function Runner() {
      Runner.__super__.constructor.call(this, 300, 300);
    }

    return Runner;

  })(Sprite);

  Bar = (function(_super) {
    __extends(Bar, _super);

    function Bar() {
      Bar.__super__.constructor.call(this, 545, 88);
      this.image = core.assets["bar.png"];
      this.moveTo(22, 602);
    }

    Bar.prototype.succ = function() {
      var next;
      next = this.width - 545 / 11;
      if (0 <= next) {
        return this.width = next;
      } else {
        core.GameOverScene = new GameOverScene(this.scene.timer.remainingFrame());
        return core.replaceScene(core.GameOverScene);
      }
    };

    return Bar;

  })(Sprite);

  Water = (function(_super) {
    __extends(Water, _super);

    function Water() {
      Water.__super__.constructor.call(this, 279, 351);
      this.image = core.assets["water.png"];
      this.startAt = Infinity;
      this.opacity = 0;
      this.moveTo(900, 50);
    }

    Water.prototype.start = function() {
      this.startAt = core.frame;
      return this.opacity = 1;
    };

    Water.prototype.onenterframe = function() {
      if (this.startAt < core.frame && 0.01 < this.opacity) {
        this.scaleX = Math.sin(core.frame / 6);
        return this.opacity -= 0.1;
      } else if (this.startAt + 1 * core.fps < core.frame) {
        this.opacity = 0;
        return this.startAt = Infinity;
      }
    };

    return Water;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      var _this = this;
      GameScene.__super__.constructor.call(this);
      this.touchLog = [];
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.bar = new Bar();
      this.addChild(this.bar);
      this.water = new Water();
      this.addChild(this.water);
      this.timer = new CountDownTimer(15);
      this.timer.start();
      this.timer.font = "40px Serif";
      this.timer.color = "red";
      this.timer.moveTo(100, 100);
      this.addChild(this.timer);
      this.timer.addEventListener("over", function() {
        core.GameOverScene = new GameOverScene(_this.timer.remainingFrame());
        return core.replaceScene(core.GameOverScene);
      });
    }

    GameScene.prototype.lastTouchedAt = function() {
      return this.touchLog[this.touchLog.length - 1];
    };

    GameScene.prototype.ontouchstart = function(e) {
      if (1100 - e.x < e.y) {
        if (this.touchLog.length === 0 || this.lastTouchedAt() + 1 * core.fps < core.frame) {
          this.touchLog.push(core.frame);
          this.bar.succ();
          this.water.start();
        }
      }
      return core.gameScene = new GameScene();
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.startAt = core.frame;
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      if (score > 10) {
        this.bg.image = core.assets["game_over2.png"];
      } else {
        this.bg.image = core.assets["game_over1.png"];
      }
      this.addChild(this.bg);
    }

    GameOverScene.prototype.ontouchstart = function() {
      if (this.startAt + 1 * core.fps < core.frame) {
        return core.replaceScene(core.titleScene);
      }
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over1.png");
    assets.push("game_over2.png");
    assets.push("water.png");
    assets.push("bar.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
