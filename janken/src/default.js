// Generated by CoffeeScript 1.6.3
(function() {
  var CP, Choki, GameOverScene, GameScene, Gu, Janken, Pa, Pon, TitleScene, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  Janken = (function(_super) {
    __extends(Janken, _super);

    function Janken() {
      Janken.__super__.constructor.call(this, 575, 108);
      this.image = core.assets["janken.png"];
    }

    return Janken;

  })(Sprite);

  CP = (function(_super) {
    __extends(CP, _super);

    function CP() {
      CP.__super__.constructor.call(this, 189, 189);
      this.image = core.assets["cp.png"];
      this.frame = [0, 0, 0, 1, 1, 1, 2, 2, 2];
      this.moveTo(546, 100);
    }

    return CP;

  })(Sprite);

  Pon = (function(_super) {
    __extends(Pon, _super);

    function Pon() {
      Pon.__super__.constructor.call(this, 303, 120);
      this.image = core.assets["pon.png"];
      this.isStarted = false;
      this.isTouched = false;
    }

    Pon.prototype.ontouchstart = function() {
      var ev;
      if (this.isStarted && !this.isTouched) {
        ev = new Event("select");
        this.dispatchEvent(ev);
        return this.isTouched = true;
      }
    };

    return Pon;

  })(Sprite);

  Gu = (function(_super) {
    __extends(Gu, _super);

    function Gu() {
      Gu.__super__.constructor.call(this, 189, 189);
      this.image = core.assets["gu.png"];
      this.moveTo(142, 363);
      this.isStarted = false;
    }

    Gu.prototype.ontouchstart = function() {
      var ev;
      if (this.isStarted && !this.isTouched) {
        ev = new Event("select");
        this.dispatchEvent(ev);
        return this.isTouched = true;
      }
    };

    return Gu;

  })(Sprite);

  Choki = (function(_super) {
    __extends(Choki, _super);

    function Choki() {
      Choki.__super__.constructor.call(this, 189, 189);
      this.image = core.assets["choki.png"];
      this.moveTo(546, 456);
      this.isStarted = false;
    }

    Choki.prototype.ontouchstart = function() {
      var ev;
      if (this.isStarted && !this.isTouched) {
        ev = new Event("select");
        this.dispatchEvent(ev);
        return this.isTouched = true;
      }
    };

    return Choki;

  })(Sprite);

  Pa = (function(_super) {
    __extends(Pa, _super);

    function Pa() {
      Pa.__super__.constructor.call(this, 189, 189);
      this.image = core.assets["pa.png"];
      this.moveTo(950, 343);
    }

    Pa.prototype.ontouchstart = function() {
      var ev;
      if (this.isStarted) {
        ev = new Event("select");
        return this.dispatchEvent(ev);
      }
    };

    return Pa;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      var _this = this;
      GameScene.__super__.constructor.call(this);
      this.length = 0;
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.janken = new Janken();
      this.addChild(this.janken);
      this.cp = new CP();
      this.addChild(this.cp);
      this.isWin = false;
      this.isAiko = false;
      this.cpGu = new Gu();
      this.cpChoki = new Choki();
      this.cpPa = new Pa();
      this.cpList = [this.cpGu, this.cpChoki, this.cpPa];
      this.cpState = 0;
      this.gu = new Gu();
      this.addChild(this.gu);
      this.gu.addEventListener("select", function() {
        _this.removeChild(_this.cp);
        _this.pon = new Pon();
        _this.addChild(_this.pon);
        _this.cpState = Math.floor(Math.random() * 3);
        _this.cpList[_this.cpState].moveTo(546, 100);
        _this.addChild(_this.cpList[_this.cpState]);
        if (_this.cpState === 0) {
          _this.isAiko = true;
        } else if (_this.cpState === 1) {
          _this.isWin = true;
        }
        _this.removeChild(_this.choki);
        _this.removeChild(_this.pa);
        return _this.result();
      });
      this.choki = new Choki();
      this.addChild(this.choki);
      this.choki.addEventListener("select", function() {
        _this.removeChild(_this.cp);
        _this.pon = new Pon();
        _this.addChild(_this.pon);
        _this.cpState = Math.floor(Math.random() * 3);
        _this.cpList[_this.cpState].moveTo(546, 100);
        _this.addChild(_this.cpList[_this.cpState]);
        if (_this.cpState === 1) {
          _this.isAiko = true;
        } else if (_this.cpState === 2) {
          _this.isWin = true;
        }
        _this.removeChild(_this.gu);
        _this.removeChild(_this.pa);
        return _this.result();
      });
      this.pa = new Pa();
      this.addChild(this.pa);
      this.pa.addEventListener("select", function() {
        _this.removeChild(_this.cp);
        _this.pon = new Pon();
        _this.addChild(_this.pon);
        _this.cpState = Math.floor(Math.random() * 3);
        _this.cpList[_this.cpState].moveTo(546, 100);
        _this.addChild(_this.cpList[_this.cpState]);
        if (_this.cpState === 2) {
          _this.isAiko = true;
        } else if (_this.cpState === 0) {
          _this.isWin = true;
        }
        _this.removeChild(_this.choki);
        _this.removeChild(_this.gu);
        return _this.result();
      });
    }

    GameScene.prototype.onenterframe = function() {
      if (this.age > 45) {
        this.removeChild(this.janken);
        this.gu.isStarted = true;
        this.choki.isStarted = true;
        return this.pa.isStarted = true;
      }
    };

    GameScene.prototype.result = function() {
      if (this.isAiko) {
        return this.tl.delay(30).then(function() {
          core.gameScene = new GameScene();
          return core.replaceScene(core.gameScene);
        });
      } else if (this.isWin) {
        return this.tl.delay(30).then(function() {
          core.gameOverScene = new GameOverScene(0);
          return core.replaceScene(core.gameOverScene);
        });
      } else {
        return this.tl.delay(30).then(function() {
          core.gameOverScene = new GameOverScene(1);
          return core.replaceScene(core.gameOverScene);
        });
      }
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      if (score === 0) {
        this.bg.image = core.assets["game_over1.png"];
      } else if (score === 1) {
        this.bg.image = core.assets["game_over2.png"];
      }
      this.addChild(this.bg);
    }

    GameOverScene.prototype.ontouchstart = function() {
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over1.png");
    assets.push("game_over2.png");
    assets.push("gu.png");
    assets.push("choki.png");
    assets.push("pa.png");
    assets.push("pon.png");
    assets.push("janken.png");
    assets.push("cp.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
