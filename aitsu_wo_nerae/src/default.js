// Generated by CoffeeScript 1.6.3
(function() {
  var Angle, Ball, Enemy, GameOverScene, GameScene, Player, Power, TitleScene, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  Player = (function(_super) {
    __extends(Player, _super);

    function Player() {
      Player.__super__.constructor.call(this, 90, 135);
      this.image = core.assets["player.png"];
      this.swingAt = Infinity;
    }

    Player.prototype.startSwing = function() {
      return this.swingAt = core.frame;
    };

    Player.prototype.onenterframe = function() {
      if (this.swingAt + 2 * core.fps < core.frame) {
        return this.frame = 2;
      } else if (this.swingAt + 1 * core.fps < core.frame) {
        return this.frame = 1;
      } else {
        return this.frame = 0;
      }
    };

    return Player;

  })(Sprite);

  Enemy = (function(_super) {
    __extends(Enemy, _super);

    function Enemy() {
      Enemy.__super__.constructor.call(this, 209, 189);
      this.image = core.assets["mato.png"];
      this.moveTo(900, Math.random() * 500);
    }

    return Enemy;

  })(Sprite);

  Ball = (function(_super) {
    __extends(Ball, _super);

    function Ball() {
      Ball.__super__.constructor.call(this, 9, 9);
      this.image = core.assets["ball.png"];
      this.vx = 0;
      this.vy = 0;
    }

    Ball.prototype.onenterframe = function() {
      var dx, dy;
      dx = this.x + this.vx;
      dy = this.y + this.vy;
      this.vy += 1;
      if (631 < dy) {
        this.vy = 0;
        return this.vx = 0;
      } else {
        this.x = dx;
        return this.y = dy;
      }
    };

    return Ball;

  })(Sprite);

  Power = (function(_super) {
    __extends(Power, _super);

    function Power() {
      Power.__super__.constructor.call(this, 326, 52);
      this.image = core.assets["power.png"];
      this.isMoving = false;
    }

    Power.prototype.start = function() {
      return this.isMoving = true;
    };

    Power.prototype.stop = function() {
      return this.isMoving = false;
    };

    Power.prototype.percentage = function() {
      return this.width / 326;
    };

    Power.prototype.onenterframe = function() {
      if (this.isMoving) {
        return this.width = (Math.sin(core.frame / 10) + 1) * 326 / 2;
      }
    };

    return Power;

  })(Sprite);

  Angle = (function(_super) {
    __extends(Angle, _super);

    function Angle() {
      Angle.__super__.constructor.call(this, 20, 107);
      this.image = core.assets["angle.png"];
      this.isMoving = false;
      this.originX = 10;
      this.originY = 107;
    }

    Angle.prototype.start = function() {
      return this.isMoving = true;
    };

    Angle.prototype.stop = function() {
      return this.isMoving = false;
    };

    Angle.prototype.percentage = function() {
      return Math.sin(core.frame / 10);
    };

    Angle.prototype.onenterframe = function() {
      if (this.isMoving) {
        this.rotation = Math.sin(core.frame / 10) * 40 + 40;
        return console.log(this.rotation);
      }
    };

    return Angle;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      GameScene.__super__.constructor.call(this);
      this.length = 0;
      this.touchCount = [];
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.player = new Player();
      this.player.moveTo(100, 500);
      this.addChild(this.player);
      this.power = new Power();
      this.power.moveTo(600, 600);
      this.power.start();
      this.addChild(this.power);
      this.angle = new Angle();
      this.angle.moveTo(200, 500);
      this.angle.start();
      this.addChild(this.angle);
      this.ball = new Ball();
      this.ball.moveTo(150, 630);
      this.addChild(this.ball);
      this.enemy = new Enemy();
      this.addChild(this.enemy);
    }

    GameScene.prototype.ontouchstart = function() {
      this.touchCount.push(core.frame);
      if (this.touchCount.length === 1) {
        return this.power.stop();
      } else if (this.touchCount.length === 2) {
        this.angle.stop();
        return this.player.startSwing();
      }
    };

    GameScene.prototype.onenterframe = function() {
      var angle, power;
      if (this.enemy.intersect(this.ball)) {
        core.gameOverScene = new GameOverScene(1);
        core.replaceScene(core.gameOverScene);
      }
      if (this.touchCount.length > 1) {
        if (this.touchCount[1] + 2 * core.fps === core.frame) {
          power = this.power.percentage() * 30 + 4;
          angle = Math.PI / 2 - this.angle.percentage() * Math.PI / 2;
          this.ball.vx = power * Math.sin(angle);
          this.ball.vy = -1 - power * Math.sin(angle);
        }
        if (this.ball.vx === 0 && this.ball.vy === 0 && this.touchCount[1] + 4 * core.fps < core.frame) {
          core.gameOverScene = new GameOverScene(0);
          return core.replaceScene(core.gameOverScene);
        }
      }
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      if (score === 0) {
        this.label = new Label("はずれ");
      } else if (score === 1) {
        this.label = new Label("よくやった");
      }
      this.label.font = "128px Serif";
      this.label.color = "orange";
      this.label.width = 800;
      this.label.textAlign = "center";
      this.label.moveTo((HQ_GAME_WIDTH - this.label.width) / 2, 300);
      this.addChild(this.label);
    }

    GameOverScene.prototype.ontouchstart = function() {
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over.png");
    assets.push("player.png");
    assets.push("power.png");
    assets.push("ball.png");
    assets.push("angle.png");
    assets.push("mato.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
