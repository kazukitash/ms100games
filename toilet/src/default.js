// Generated by CoffeeScript 1.6.3
(function() {
  var CountUpTimer, GameOverScene, GameScene, Shaking, TitleScene, Unchi, Yogore, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  CountUpTimer = (function(_super) {
    __extends(CountUpTimer, _super);

    function CountUpTimer() {
      CountUpTimer.__super__.constructor.call(this, "0.00");
      this.startAt = Infinity;
    }

    CountUpTimer.prototype.start = function() {
      return this.startAt = core.frame;
    };

    CountUpTimer.prototype.currentFrame = function() {
      return core.frame - this.startAt;
    };

    CountUpTimer.prototype.currentSec = function() {
      return this.currentFrame() / core.fps;
    };

    CountUpTimer.prototype.onenterframe = function() {
      return this.text = this.currentSec().toFixed(2);
    };

    return CountUpTimer;

  })(Label);

  Shaking = (function(_super) {
    __extends(Shaking, _super);

    function Shaking(w, h) {
      Shaking.__super__.constructor.call(this, w, h);
      this.vx = 0;
      this.vy = 0;
    }

    Shaking.prototype.endCondition = function() {
      return false;
    };

    Shaking.prototype.shake = function() {
      if (this.endCondition()) {
        return this.dispatchEvent(new Event("over"));
      } else {

      }
    };

    Shaking.prototype.ontouchmove = function() {
      if (this.opacity < 0.2) {
        this.opacity = 0;
        return this.dispatchEvent(new Event("over"));
      } else {
        this.opacity -= 0.01;
        this.vx = 2 * Math.random() - 1;
        return this.vy = 2 * Math.random() - 1;
      }
    };

    Shaking.prototype.onenterframe = function() {
      this.x += this.vx;
      return this.y += this.vy;
    };

    return Shaking;

  })(Sprite);

  Yogore = (function(_super) {
    __extends(Yogore, _super);

    function Yogore(w, h) {
      Yogore.__super__.constructor.call(this, 75, 75);
      this.image = core.assets["yogore.png"];
    }

    return Yogore;

  })(Shaking);

  Unchi = (function(_super) {
    __extends(Unchi, _super);

    function Unchi(w, h) {
      Unchi.__super__.constructor.call(this, 117, 93);
      this.image = core.assets["unchi.png"];
    }

    return Unchi;

  })(Shaking);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      var count, unchi, yogore, _this;
      GameScene.__super__.constructor.call(this);
      _this = this;
      this.length = 0;
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.timer = new CountUpTimer();
      this.timer.start();
      this.count = 1;
      this.length = 2 * this.count;
      this.yogores = [];
      this.unchies = [];
      count = this.count;
      while (count) {
        yogore = new Yogore();
        yogore.moveTo(HQ_GAME_WIDTH / 2, HQ_GAME_HEIGHT / 2);
        yogore.moveBy(Math.random() * 300 - 150, Math.random() * 200 - 100);
        yogore.addEventListener("over", function() {
          _this.removeChild(this);
          _this.length--;
          return _this.yogores.pop();
        });
        this.addChild(yogore);
        this.yogores.push(yogore);
        unchi = new Unchi();
        unchi.moveTo(HQ_GAME_WIDTH / 2, HQ_GAME_HEIGHT / 2);
        unchi.moveBy(Math.random() * 300 - 150, Math.random() * 200 - 100);
        unchi.addEventListener("over", function() {
          _this.removeChild(this);
          _this.length--;
          return _this.unchies.pop();
        });
        this.addChild(unchi);
        this.unchies.push(unchi);
        --count;
      }
    }

    GameScene.prototype.endCondition = function() {
      return this.yogores.length === 0 && this.unchies.length === 0;
    };

    GameScene.prototype.onenterframe = function() {
      if (this.endCondition()) {
        core.gameOverScene = new GameOverScene(this.timer.currentSec());
        return core.replaceScene(core.gameOverScene);
      }
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      this.label = new Label(score.toFixed(2));
      this.label.font = "80px Serif";
      this.label.color = "black";
      this.label.x = (HQ_GAME_WIDTH - this.label.width) / 2;
      this.label.y = (HQ_GAME_HEIGHT - this.label.height) / 2;
      this.addChild(this.label);
    }

    GameOverScene.prototype.ontouchstart = function() {
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over.png");
    assets.push("unchi.png");
    assets.push("yogore.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
