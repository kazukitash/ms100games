// Generated by CoffeeScript 1.6.3
(function() {
  var CountUpTimer, GameOverScene, GameScene, LeftEye, LeftGlass, LeftTaintedGlass, RightEye, RightGlass, RightTaintedGlass, Shaking, TitleScene, core, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  CountUpTimer = (function(_super) {
    __extends(CountUpTimer, _super);

    function CountUpTimer() {
      CountUpTimer.__super__.constructor.call(this, "0.00");
      this.startAt = Infinity;
    }

    CountUpTimer.prototype.start = function() {
      return this.startAt = core.frame;
    };

    CountUpTimer.prototype.currentFrame = function() {
      return core.frame - this.startAt;
    };

    CountUpTimer.prototype.currentSec = function() {
      return this.currentFrame() / core.fps;
    };

    CountUpTimer.prototype.onenterframe = function() {
      return this.text = this.currentSec().toFixed(2);
    };

    return CountUpTimer;

  })(Label);

  Shaking = (function(_super) {
    __extends(Shaking, _super);

    function Shaking() {
      _ref = Shaking.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Shaking.prototype.endCondition = function() {
      return this.opacity < 0.01;
    };

    Shaking.prototype.shake = function() {
      if (this.endCondition()) {
        return this.dispatchEvent(new Event("over"));
      } else {
        return this.opacity -= 0.01;
      }
    };

    return Shaking;

  })(Sprite);

  LeftEye = (function(_super) {
    __extends(LeftEye, _super);

    function LeftEye() {
      LeftEye.__super__.constructor.call(this, 352, 200);
      this.image = core.assets["left-glass2.png"];
      this.frame = Math.floor(Math.random() * 4);
      this.moveTo(200, 400);
    }

    return LeftEye;

  })(Shaking);

  LeftGlass = (function(_super) {
    __extends(LeftGlass, _super);

    function LeftGlass() {
      LeftGlass.__super__.constructor.call(this, 329, 200);
      this.image = core.assets["left-glass1.png"];
      this.frame = 1;
      this.moveTo(220, 400);
    }

    return LeftGlass;

  })(Shaking);

  LeftTaintedGlass = (function(_super) {
    __extends(LeftTaintedGlass, _super);

    function LeftTaintedGlass() {
      LeftTaintedGlass.__super__.constructor.call(this, 329, 200);
      this.image = core.assets["left-glass1.png"];
      this.frame = 0;
      this.moveTo(220, 400);
    }

    return LeftTaintedGlass;

  })(Shaking);

  RightEye = (function(_super) {
    __extends(RightEye, _super);

    function RightEye() {
      RightEye.__super__.constructor.call(this, 352, 200);
      this.image = core.assets["right-glass2.png"];
      this.moveTo(770, 400);
      this.frame = Math.floor(Math.random() * 4);
    }

    return RightEye;

  })(Shaking);

  RightGlass = (function(_super) {
    __extends(RightGlass, _super);

    function RightGlass() {
      RightGlass.__super__.constructor.call(this, 324, 200);
      this.image = core.assets["left-glass1.png"];
      this.frame = 1;
      this.moveTo(770, 400);
    }

    return RightGlass;

  })(Shaking);

  RightTaintedGlass = (function(_super) {
    __extends(RightTaintedGlass, _super);

    function RightTaintedGlass() {
      RightTaintedGlass.__super__.constructor.call(this, 324, 200);
      this.image = core.assets["right-glass1.png"];
      this.frame = 0;
      this.moveTo(770, 400);
    }

    return RightTaintedGlass;

  })(Shaking);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      GameScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.timer = new CountUpTimer();
      this.timer.start();
      this.leftEye = new LeftEye();
      this.addChild(this.leftEye);
      this.leftGlass = new LeftGlass();
      this.addChild(this.leftGlass);
      this.leftTaintedGlass = new LeftTaintedGlass();
      this.addChild(this.leftTaintedGlass);
      this.rightEye = new RightEye();
      this.addChild(this.rightEye);
      this.rightGlass = new RightGlass();
      this.addChild(this.rightGlass);
      this.rightTaintedGlass = new RightTaintedGlass();
      this.addChild(this.rightTaintedGlass);
    }

    GameScene.prototype.succPath = function(e) {
      if (this.endCondition()) {
        return core.replaceScene(core.titleScene);
      } else {
        if (HQ_GAME_WIDTH / 2 < e.x) {
          if (this.rightTaintedGlass.endCondition()) {
            return this.rightGlass.shake();
          } else {
            return this.rightTaintedGlass.shake();
          }
        } else {
          if (this.leftTaintedGlass.endCondition()) {
            return this.leftGlass.shake();
          } else {
            return this.leftTaintedGlass.shake();
          }
        }
      }
    };

    GameScene.prototype.endCondition = function() {
      return this.rightGlass.opacity < 0.01 && this.leftGlass.opacity < 0.01;
    };

    GameScene.prototype.ontouchstart = function(e) {
      return this.succPath(e);
    };

    GameScene.prototype.ontouchmove = function(e) {
      return this.succPath(e);
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      if (score == null) {
        score = 0;
      }
      GameOverScene.__super__.constructor.call(this);
      this.label = new Label(score.toString());
      this.label.font = "80px Serif";
      this.label.color = "white";
      this.label.x = (HQ_GAME_WIDTH - this.width) / 2;
      this.label.y = (HQ_GAME_HEIGHT - this.height) / 2;
      this.addChild(this.label);
    }

    GameOverScene.prototype.ontouchstart = function() {
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("left-glass1.png");
    assets.push("left-glass2.png");
    assets.push("right-glass1.png");
    assets.push("right-glass2.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
