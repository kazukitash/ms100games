// Generated by CoffeeScript 1.6.3
(function() {
  var GameOverScene, GameScene, TitleScene, core, couple,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  couple = (function(_super) {
    __extends(couple, _super);

    function couple(option) {
      couple.__super__.constructor.call(this, 360, 450);
      this.image = core.assets["couple.png"];
      this.frame = option;
      this.hp = 0;
      if (option === 0 || option === 1) {
        this.hp = 1;
      }
      this.isDamaged = false;
    }

    couple.prototype.ontouchstart = function() {
      if (!this.isDamaged) {
        this.frame += 16;
        this.isDamaged = true;
        return this.hp--;
      }
    };

    return couple;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
      this.score = 0;
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene(this.score);
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene(score) {
      var i, _i;
      GameScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.score = score;
      this.scoreLabel = new Label(this.score);
      this.scoreLabel.width = 150;
      this.scoreLabel.textAlign = "center";
      this.scoreLabel.moveTo(15, 70);
      this.scoreLabel.font = "48px Sans-serif";
      this.scoreLabel.color = "black";
      this.addChild(this.scoreLabel);
      this.targetFrame = Math.floor(Math.random() * 2);
      this.frameSet = [this.targetFrame];
      for (i = _i = 0; _i <= 1; i = ++_i) {
        this.frameSet.push(Math.floor(Math.random() * 14 + 2));
      }
      this.couple1 = new couple(this.frameSet[Math.floor(Math.random() * 3)]);
      this.couple1.moveTo(260, 180);
      this.addChild(this.couple1);
      this.couple2 = new couple(this.frameSet[Math.floor(Math.random() * 3)]);
      this.couple2.moveTo(670, 180);
      this.addChild(this.couple2);
    }

    GameScene.prototype.onenterframe = function() {
      if (this.age === 60) {
        if (this.couple1.hp === 0 && this.couple2.hp === 0) {
          this.scoreLabel = new Label("正解");
          this.scoreLabel.width = 900;
          this.scoreLabel.textAlign = "center";
          this.scoreLabel.moveTo((HQ_GAME_WIDTH - this.scoreLabel.width) / 2, 300);
          this.scoreLabel.font = "128px Sans-serif";
          this.scoreLabel.color = "red";
          this.addChild(this.scoreLabel);
          return this.tl.delay(60).then(function() {
            this.score++;
            core.gameScene = new GameScene(this.score);
            return core.replaceScene(core.gameScene);
          });
        } else {
          this.scoreLabel = new Label("残念");
          this.scoreLabel.width = 900;
          this.scoreLabel.textAlign = "center";
          this.scoreLabel.moveTo((HQ_GAME_WIDTH - this.scoreLabel.width) / 2, 300);
          this.scoreLabel.font = "128px Sans-serif";
          this.scoreLabel.color = "blue";
          this.addChild(this.scoreLabel);
          return this.tl.delay(60).then(function() {
            core.gameOverScene = new GameOverScene(this.score);
            return core.replaceScene(core.gameOverScene);
          });
        }
      }
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      this.scoreLabel = new Label(score.toString());
      this.scoreLabel.width = 900;
      this.scoreLabel.textAlign = "center";
      this.scoreLabel.moveTo((HQ_GAME_WIDTH - this.scoreLabel.width) / 2, 300);
      this.scoreLabel.font = "128px Sans-serif";
      this.scoreLabel.color = "red";
      this.addChild(this.scoreLabel);
    }

    GameOverScene.prototype.ontouchstart = function() {
      core.titleScene = new TitleScene();
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over.png");
    assets.push("couple.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
