// Generated by CoffeeScript 1.6.3
(function() {
  var CountUpTimer, GameOverScene, GameScene, TitleScene, Traveler, Travelers, core, player,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  CountUpTimer = (function(_super) {
    __extends(CountUpTimer, _super);

    function CountUpTimer() {
      CountUpTimer.__super__.constructor.call(this, "0.00");
      this.startAt = Infinity;
    }

    CountUpTimer.prototype.start = function() {
      return this.startAt = core.frame;
    };

    CountUpTimer.prototype.currentFrame = function() {
      return core.frame - this.startAt;
    };

    CountUpTimer.prototype.currentSec = function() {
      return this.currentFrame() / core.fps;
    };

    CountUpTimer.prototype.onenterframe = function() {
      return this.text = this.currentSec().toFixed(2);
    };

    return CountUpTimer;

  })(Label);

  Traveler = (function(_super) {
    __extends(Traveler, _super);

    function Traveler() {
      Traveler.__super__.constructor.call(this, 175, 25);
      this.image = core.assets["iraira.png"];
      this.frame = 0;
      this.moveTo(Math.random() * HQ_GAME_WIDTH, Math.random() * HQ_GAME_HEIGHT);
      this.life = 300;
      if (core.gameScene.age > 200) {
        this.life += Math.floor(core.gameScene / 200) * 10;
      }
      this.isDead = false;
      this.vx = 3;
      this.vy = 5;
    }

    Traveler.prototype.onenterframe = function() {
      if (this.life < 0) {
        this.isDead = true;
      }
      this.life--;
      if (this.x < 0 || this.x > HQ_GAME_WIDTH - this.width) {
        this.vx = -this.vx;
        this.scaleX = -1;
      }
      if (this.y < 0 || this.y > HQ_GAME_HEIGHT - this.height) {
        this.vy = -this.vy;
      }
      return this.moveBy(this.vx, this.vy);
    };

    return Traveler;

  })(Sprite);

  Travelers = (function(_super) {
    __extends(Travelers, _super);

    function Travelers(player) {
      Travelers.__super__.constructor.call(this);
      this.player = player;
      this.travelers = [];
    }

    Travelers.prototype.onenterframe = function() {
      var traveler, travelersLength;
      travelersLength = this.travelers.length;
      while (travelersLength) {
        traveler = this.travelers[--travelersLength];
        if (this.player.intersect(traveler)) {
          core.gameOverScene = new GameOverScene(this.scene.timer.currentSec());
          core.replaceScene(core.gameOverScene);
        }
        if (traveler.isDead) {
          this.removeChild(traveler);
          this.travelers.splice(travelersLength, 1);
        }
      }
      if (core.frame % 90 === 0) {
        traveler = new Traveler();
        this.addChild(traveler);
        return this.travelers.push(traveler);
      }
    };

    return Travelers;

  })(Group);

  player = (function(_super) {
    __extends(player, _super);

    function player() {
      player.__super__.constructor.call(this, 43, 43);
      this.image = core.assets["stick.png"];
      this.moveTo(HQ_GAME_WIDTH / 2, HQ_GAME_HEIGHT / 2);
    }

    return player;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      var travelers;
      GameScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.player = new player();
      this.addChild(this.player);
      travelers = new Travelers(this.player);
      this.addChild(travelers);
      this.timer = new CountUpTimer();
      this.timer.width = 180;
      this.timer.textAlign = "center";
      this.timer.moveTo(30, 75);
      this.timer.font = "48px Sans-serif";
      this.timer.color = "rgb(230, 230, 230)";
      this.timer.start();
      this.addChild(this.timer);
    }

    GameScene.prototype.ontouchstart = function(e) {
      return this.player.moveTo(e.x - this.player.width / 2, e.y - this.player.height / 2);
    };

    GameScene.prototype.ontouchmove = function(e) {
      return this.player.moveTo(e.x - this.player.width / 2, e.y - this.player.height / 2);
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      this.score = score.toFixed(2);
      this.scoreLabel = new Label(this.score.toString());
      this.scoreLabel.width = 300;
      this.scoreLabel.textAlign = "center";
      this.scoreLabel.moveTo((HQ_GAME_WIDTH - this.scoreLabel.width) / 2, 150);
      this.scoreLabel.font = "100px Sans-serif";
      this.scoreLabel.color = "rgb(230,230,230)";
      this.addChild(this.scoreLabel);
    }

    GameOverScene.prototype.ontouchstart = function() {
      core.titleScene = new TitleScene();
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over.png");
    assets.push("stick.png");
    assets.push("iraira.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
