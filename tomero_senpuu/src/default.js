// Generated by CoffeeScript 1.6.3
(function() {
  var Cover, Fan, GameOverScene, GameScene, Hand, HowToScene, TitleScene, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  Fan = (function(_super) {
    __extends(Fan, _super);

    function Fan() {
      Fan.__super__.constructor.call(this, 601, 601);
      this.image = core.assets["target.png"];
      this.rot = 10 * Math.floor(Math.random() * 3 + 1);
      this.moveTo(155, 165);
    }

    Fan.prototype.onenterframe = function() {
      return this.rotate(this.rot);
    };

    return Fan;

  })(Sprite);

  Hand = (function(_super) {
    __extends(Hand, _super);

    function Hand() {
      Hand.__super__.constructor.call(this, 562, 481);
      this.image = core.assets["hand.png"];
      this.moveTo(720, 190);
    }

    return Hand;

  })(Sprite);

  Cover = (function(_super) {
    __extends(Cover, _super);

    function Cover() {
      Cover.__super__.constructor.call(this, 682, 604);
      this.image = core.assets["cover.png"];
      this.moveTo(115, 120);
    }

    return Cover;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
      this.score = 0;
    }

    TitleScene.prototype.ontouchstart = function() {
      core.howToScene = new HowToScene(this.score);
      return core.pushScene(core.howToScene);
    };

    return TitleScene;

  })(Scene);

  HowToScene = (function(_super) {
    __extends(HowToScene, _super);

    function HowToScene(score) {
      HowToScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["how.png"];
      this.addChild(this.bg);
      this.score = score;
    }

    HowToScene.prototype.ontouchstart = function() {
      core.popScene();
      core.gameScene = new GameScene(this.score);
      return core.replaceScene(core.gameScene);
    };

    return HowToScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene(score) {
      GameScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.fan = new Fan();
      this.addChild(this.fan);
      this.cover = new Cover();
      this.addChild(this.cover);
      this.hand = new Hand();
      this.addChild(this.hand);
      this.score = score;
      this.scoreLabel = new Label(this.score.toString() + "台");
      this.scoreLabel.width = 300;
      this.scoreLabel.textAlign = "center";
      this.scoreLabel.moveTo(980, 30);
      this.scoreLabel.font = "64px Sans-serif";
      this.scoreLabel.color = "rgb(34, 42, 46)";
      this.addChild(this.scoreLabel);
    }

    GameScene.prototype.stopFan = function() {
      var rot,
        _this = this;
      this.fan.rot = 0;
      rot = Math.floor((this.fan.rotation + 30) / 60);
      return this.hand.tl.moveTo(450, 65, 10).delay(10).then(function() {
        if (rot % 2 === 0) {
          _this.score++;
          core.gameScene = new GameScene(_this.score);
          return core.replaceScene(core.gameScene);
        } else {
          core.gameOverScene = new GameOverScene(_this.score);
          return core.replaceScene(core.gameOverScene);
        }
      });
    };

    GameScene.prototype.ontouchstart = function(e) {
      return this.stopFan();
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      this.score = score;
      this.scoreLabel = new Label(this.score.toString() + "台");
      this.scoreLabel.width = 300;
      this.scoreLabel.textAlign = "center";
      this.scoreLabel.moveTo(980, 30);
      this.scoreLabel.font = "64px Sans-serif";
      this.scoreLabel.color = "rgb(34, 42, 46)";
      this.addChild(this.scoreLabel);
    }

    GameOverScene.prototype.ontouchstart = function() {
      core.titleScene = new TitleScene();
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over.png");
    assets.push("target.png");
    assets.push("hand.png");
    assets.push("cover.png");
    assets.push("how.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
