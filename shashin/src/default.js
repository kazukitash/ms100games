// Generated by CoffeeScript 1.6.3
(function() {
  var CountUpTimer, GameOverScene, GameScene, Pen, Runner, Shin, TitleScene, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  CountUpTimer = (function(_super) {
    __extends(CountUpTimer, _super);

    function CountUpTimer() {
      CountUpTimer.__super__.constructor.call(this, "0.00");
      this.startAt = Infinity;
    }

    CountUpTimer.prototype.start = function() {
      return this.startAt = core.frame;
    };

    CountUpTimer.prototype.currentFrame = function() {
      return core.frame - this.startAt;
    };

    CountUpTimer.prototype.currentSec = function() {
      return this.currentFrame() / core.fps;
    };

    CountUpTimer.prototype.onenterframe = function() {
      return this.text = this.currentSec().toFixed(2);
    };

    return CountUpTimer;

  })(Label);

  Runner = (function(_super) {
    __extends(Runner, _super);

    function Runner() {
      Runner.__super__.constructor.call(this, 300, 300);
    }

    return Runner;

  })(Sprite);

  Pen = (function(_super) {
    __extends(Pen, _super);

    function Pen() {
      Pen.__super__.constructor.call(this, 47, 654);
      this.image = core.assets["pen.png"];
      this.x = (HQ_GAME_WIDTH - this.width) / 2;
      this.y = -450;
    }

    return Pen;

  })(Sprite);

  Shin = (function(_super) {
    __extends(Shin, _super);

    function Shin() {
      Shin.__super__.constructor.call(this, 4, 402);
      this.image = core.assets["shin.png"];
      this.vx = 0;
      this.vy = 0;
      this.isFalling = false;
    }

    Shin.prototype.succ = function() {
      if (100 < this.y) {
        return this.vy += 10;
      } else {
        return this.y += 6;
      }
    };

    Shin.prototype.onenterframe = function() {
      this.x += this.vx;
      this.y += this.vy;
      if (HQ_GAME_HEIGHT < this.y) {
        return this.dispatchEvent(new Event("out"));
      }
    };

    return Shin;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene();
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene() {
      var _this = this;
      GameScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.timer = new CountUpTimer();
      this.timer.color = "white";
      this.timer.font = "40px Serif";
      this.timer.moveTo(80, 80);
      this.timer.start();
      this.addChild(this.timer);
      this.shin = new Shin();
      this.shin.x = (HQ_GAME_WIDTH - this.shin.width) / 2;
      this.shin.y = -300;
      this.addChild(this.shin);
      this.pen = new Pen();
      this.addChild(this.pen);
      this.shin.addEventListener("out", function() {
        core.gameOverScene = new GameOverScene(_this.timer.currentSec());
        return core.replaceScene(core.gameOverScene);
      });
    }

    GameScene.prototype.ontouchstart = function() {
      return this.shin.succ();
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      this.label = new Label(score.toFixed(2));
      this.label.font = "80px Serif";
      this.label.color = "black";
      this.label.x = (HQ_GAME_WIDTH - this.label.width) / 2 + 50;
      this.label.y = (HQ_GAME_HEIGHT - this.label.height) / 2 - 100;
      this.addChild(this.label);
    }

    GameOverScene.prototype.ontouchstart = function() {
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game_over.png");
    assets.push("pen.png");
    assets.push("shin.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
