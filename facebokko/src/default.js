// Generated by CoffeeScript 1.6.3
(function() {
  var Bokko, Curtain, Defence, GameOverScene, GameScene, Iine, Offence, TitleScene, core,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  core = {};

  Curtain = (function(_super) {
    __extends(Curtain, _super);

    function Curtain() {
      Curtain.__super__.constructor.call(this, HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.backgroundColor = "red";
      this.opacity = 0.3;
    }

    return Curtain;

  })(Sprite);

  Offence = (function(_super) {
    __extends(Offence, _super);

    function Offence(action) {
      Offence.__super__.constructor.call(this, 361, 70);
      this.moveTo(200, 600);
      this.image = core.assets["btn1.png"];
      this.isAct = false;
      if (action === 1) {
        this.isAct = true;
      }
    }

    Offence.prototype.ontouchstart = function() {
      var ev;
      ev = new Event("offence");
      return this.dispatchEvent(ev);
    };

    return Offence;

  })(Sprite);

  Defence = (function(_super) {
    __extends(Defence, _super);

    function Defence(action) {
      Defence.__super__.constructor.call(this, 361, 70);
      this.moveTo(1280 - 200 - 361, 600);
      this.image = core.assets["btn2.png"];
      this.isAct = false;
      if (action === 0) {
        this.isAct = true;
      }
    }

    Defence.prototype.ontouchstart = function() {
      var ev;
      ev = new Event("defence");
      return this.dispatchEvent(ev);
    };

    return Defence;

  })(Sprite);

  Bokko = (function(_super) {
    __extends(Bokko, _super);

    function Bokko() {
      Bokko.__super__.constructor.call(this, 98, 74);
      this.moveTo(950, 250);
      this.image = core.assets["bokko.png"];
    }

    return Bokko;

  })(Sprite);

  Iine = (function(_super) {
    __extends(Iine, _super);

    function Iine() {
      Iine.__super__.constructor.call(this, 98, 96);
      this.moveTo(950, 250);
      this.image = core.assets["iine.png"];
    }

    return Iine;

  })(Sprite);

  TitleScene = (function(_super) {
    __extends(TitleScene, _super);

    function TitleScene() {
      TitleScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["title.png"];
      this.addChild(this.bg);
      this.round = 0;
    }

    TitleScene.prototype.ontouchstart = function() {
      core.gameScene = new GameScene(this.round);
      return core.replaceScene(core.gameScene);
    };

    return TitleScene;

  })(Scene);

  GameScene = (function(_super) {
    __extends(GameScene, _super);

    function GameScene(round) {
      var _this = this;
      GameScene.__super__.constructor.call(this);
      this.length = 0;
      this.round = round + 1;
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game.png"];
      this.addChild(this.bg);
      this.delay = Math.floor(Math.sqrt(1 / Math.sqrt(this.round ^ 2 + 3)) * core.fps);
      this.limit = Math.floor((8 * (1 - Math.sqrt(1 / Math.sqrt((this.round / 4) ^ 2 + 3))) * Math.random() + 2) * core.fps);
      this.lose = false;
      this.win = false;
      this.bokko = new Bokko();
      this.iine = new Iine();
      this.actions = [this.bokko, this.iine];
      this.action = Math.floor(Math.random() * 2);
      this.offence = new Offence(this.action);
      this.addChild(this.offence);
      this.offence.addEventListener("offence", function() {
        var curtain;
        if (_this.isStart && _this.action === 1) {
          _this.win = true;
          _this.bg.image = core.assets["game2.png"];
          return _this.tl.delay(45).then(function() {
            core.gameScene = new GameScene(_this.round);
            return core.replaceScene(core.gameScene);
          });
        } else {
          _this.lose = true;
          curtain = new Curtain();
          _this.addChild(curtain);
          return _this.tl.delay(45).then(function() {
            core.gameOverScene = new GameOverScene(_this.round);
            return core.replaceScene(core.gameOverScene);
          });
        }
      });
      this.defence = new Defence(this.action);
      this.addChild(this.defence);
      this.defence.addEventListener("defence", function() {
        var curtain;
        if (_this.isStart && _this.action === 0) {
          _this.win = true;
          _this.bg.image = core.assets["game1.png"];
          return _this.tl.delay(45).then(function() {
            core.gameScene = new GameScene(_this.round);
            return core.replaceScene(core.gameScene);
          });
        } else {
          _this.lose = true;
          curtain = new Curtain();
          _this.addChild(curtain);
          return _this.tl.delay(45).then(function() {
            core.gameOverScene = new GameOverScene(_this.round);
            return core.replaceScene(core.gameOverScene);
          });
        }
      });
      this.roundLabel = new Label(this.round.toString());
      this.roundLabel.width = 300;
      this.roundLabel.textAlign = "center";
      this.roundLabel.moveTo(0, 55);
      this.roundLabel.font = "96px Sans-serif";
      this.roundLabel.color = "rgb(45, 63, 119)";
      this.addChild(this.roundLabel);
    }

    GameScene.prototype.onenterframe = function() {
      var curtain,
        _this = this;
      if (this.age === this.limit && !this.lose) {
        this.isStart = true;
        this.addChild(this.actions[this.action]);
      }
      if (this.age === this.limit + this.delay && !this.lose && !this.win) {
        curtain = new Curtain();
        this.addChild(curtain);
        return this.tl.delay(45).then(function() {
          core.gameOverScene = new GameOverScene(_this.round);
          return core.replaceScene(core.gameOverScene);
        });
      }
    };

    return GameScene;

  })(Scene);

  GameOverScene = (function(_super) {
    __extends(GameOverScene, _super);

    function GameOverScene(score) {
      GameOverScene.__super__.constructor.call(this);
      this.bg = new Sprite(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
      this.bg.image = core.assets["game_over.png"];
      this.addChild(this.bg);
      this.label = new Label(score.toString());
      this.label.width = 300;
      this.label.textAlign = "center";
      this.label.moveTo((HQ_GAME_WIDTH - this.label.width) / 2 + 25, 325);
      this.label.font = "64px Sans-serif";
      this.label.color = "rgb(45, 63, 119)";
      this.addChild(this.label);
    }

    GameOverScene.prototype.ontouchstart = function() {
      return core.replaceScene(core.titleScene);
    };

    return GameOverScene;

  })(Scene);

  window.onload = function() {
    var assets;
    core = new Core(HQ_GAME_WIDTH, HQ_GAME_HEIGHT);
    assets = [];
    assets.push("title.png");
    assets.push("game.png");
    assets.push("game1.png");
    assets.push("game2.png");
    assets.push("game_over.png");
    assets.push("iine.png");
    assets.push("bokko.png");
    assets.push("btn1.png");
    assets.push("btn2.png");
    core.preload(assets);
    core.onload = function() {
      this.titleScene = new TitleScene();
      return this.pushScene(this.titleScene);
    };
    return core.start();
  };

}).call(this);
